#!/usr/bin/env bash
function build_click () {
    if ! check_cmd click; then err "missing click"; fi
    cd ${ROOT};
    [[ ! -f "manifest.json" && ! -f "manifest.json.in" ]] && err "missing manifest.json";
    [ -d "${BUILD_DIR}" ] && rm -r ${BUILD_DIR}
    [ -d "${APTSTATE}/lists" ] || {
        say "Fetching package lists...";
        mkdir -p ${APTSTATE}/lists/partial ${APTCACHE}/archives/partial;
        ensure "$SCRP_DIR"/crackle update;
    }
    if [[ -z ${TARBALL} ]]; then
	    CRACKDIR=${BUILD_DIR} ensure ${SCRP_DIR}/crackle crack ${PKG[@]};
    else
	    wget "${TARBALL}" -O - | tar -xjvf - -C "${BUILD_DIR}";
    fi
    if [ ! -f "manifest.json.in" ]; then
        say "Preparing build environment..."
        prep_build;
    fi
    say "Building package tree..."
    [ -d ${CLICK_LD_LIBRARY_PATH} ] || mkdir -p ${CLICK_LD_LIBRARY_PATH} ${CLICK_PATH}
    [ -d ${BUILD_DIR}/lib ] && cp -r ${BUILD_DIR}/lib/* ${CLICK_LD_LIBRARY_PATH}
    [ -d ${BUILD_DIR}/usr/lib ] && cp -r ${BUILD_DIR}/usr/lib/* ${CLICK_LD_LIBRARY_PATH}
    [ -d ${CLICK_LD_LIBRARY_PATH}/${ARCH_TRIPLET} ] && { cp -r ${CLICK_LD_LIBRARY_PATH}/${ARCH_TRIPLET}/* ${CLICK_LD_LIBRARY_PATH};rm -rf ${CLICK_LD_LIBRARY_PATH}/${ARCH_TRIPLET}; }
    [ -d ${BUILD_DIR}/usr/bin ] && cp -r ${BUILD_DIR}/usr/bin/* ${CLICK_PATH}
    [ -d ${BUILD_DIR}/usr/sbin ] && cp -r ${BUILD_DIR}/usr/sbin/* ${CLICK_PATH}
    [ -d ${BUILD_DIR}/usr/share ] && cp -r ${BUILD_DIR}/usr/share ${INSTALL_DIR}
[ -d ${BUILD_DIR}/usr/games ] && cp -r ${BUILD_DIR}/usr/games/* ${CLICK_PATH}
    if [ -f "manifest.json" ]; then
        ROOT=$ROOT ARCH=$ARCH ARCH_TRIPLET=$ARCH_TRIPLET BUILD_DIR=$BUILD_DIR INSTALL_DIR=$INSTALL_DIR CLICK_LD_LIBRARY_PATH=$CLICK_LD_LIBRARY_PATH CLICK_PATH=$CLICK_PATH bash ${BUILD_DIR}/adapt.sh
	sed -i "s/@CLICK_ARCH@/${ARCH}/" ${INSTALL_DIR}/manifest.json
    fi
    if [[ -z $CI ]]; then
        say "Building click...";
        click build ${INSTALL_DIR}
    fi
    exit 0;
}

function prep_build () {
	[ -d "${INSTALL_DIR}" ] && rm -r ${INSTALL_DIR}
	mkdir -p ${CLICK_LD_LIBRARY_PATH} ${CLICK_PATH} ${INSTALL_DIR}
	fetch_desktop ${PKG} ${INSTALL_DIR};
	mod_desktop
	cp ${ROOT}/pkg.d/* ${ROOT}/apparmor.json ${ROOT}/manifest.json ${BUILD_DIR}/ || exit 1
	sed -i "s/@pkg@/${PKG}/" ${BUILD_DIR}/manifest.json
	cp ${BUILD_DIR}/*.json ${INSTALL_DIR}
	cp ${BUILD_DIR}/pkg.sh ${CLICK_PATH}/${PKG}.sh
}

mod_desktop(){
	desktopfile=$(find ${INSTALL_DIR} -maxdepth 1 -name *.desktop)
	sed -i "/Icon=/d" $desktopfile
	sed -i "/Exec=/d" $desktopfile
	sed -i "/^Categories=/i Exec=${PKG}.sh" $desktopfile;
}

