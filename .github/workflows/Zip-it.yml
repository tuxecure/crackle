# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the bash branch
  push:
    branches: [ bash ]
  pull_request:
    branches: [ bash ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Upload the zip file
        uses: actions/upload-artifact@v2
        with:
          name: crackle
          path: ./*
  release:
    name: create release
    # This ensures that this job only runs on git tags
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Get git tag version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Set git tag version
        run: |
          echo "VERSION=${{ steps.get_version.outputs.version }}" >> $GITHUB_ENV
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          path: build-artifacts
      - name: Create draft GitHub release page
        id: create_release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ env.VERSION }}
          draft: true
          prerelease: false
          files: |
            **/*.zip

      - name: Add AppImage to release (x86_64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-artifacts/crackle/crackle.zip
          asset_name: crackle.zip
